# Generated by Django 4.1.8 on 2023-06-14 04:09

import apps.base.serializers.images
import apps.base.serializers.pages
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('base', '0009_remove_accessibleimage_large_rendition_url_and_more'),
        ('gallery', '0023_alter_albumdetailpage_hero_images'),
    ]

    operations = [
        migrations.AddField(
            model_name='albumdetailpage',
            name='page_content',
            field=wagtail.fields.StreamField([('call_to_action', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('text', wagtail.blocks.TextBlock(required=False)), ('image', apps.base.serializers.images.ApiImageChooserBlock()), ('link', wagtail.blocks.StructBlock([('link', wagtail.blocks.StreamBlock([('page', apps.base.serializers.pages.ApiPageChooserBlock(icon='home', required=False)), ('url', wagtail.blocks.URLBlock(icon='link', required=False))], max_num=1, required=True))]))])), ('filmstrip_images', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('images', wagtail.blocks.StreamBlock([('image', apps.base.serializers.images.ApiImageChooserBlock())]))])), ('image_grid', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('grid_size', wagtail.blocks.ChoiceBlock(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('images', wagtail.blocks.StreamBlock([('image', apps.base.serializers.images.ApiImageChooserBlock())]))]))], null=True, use_json_field=True),
        ),
        migrations.CreateModel(
            name='CollectionDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_images', wagtail.fields.StreamField([('image', apps.base.serializers.images.ApiImageChooserBlock(required=True))], null=True, use_json_field=True)),
                ('intro', wagtail.fields.RichTextField(blank=True, null=True)),
                ('page_content', wagtail.fields.StreamField([('call_to_action', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('text', wagtail.blocks.TextBlock(required=False)), ('image', apps.base.serializers.images.ApiImageChooserBlock()), ('link', wagtail.blocks.StructBlock([('link', wagtail.blocks.StreamBlock([('page', apps.base.serializers.pages.ApiPageChooserBlock(icon='home', required=False)), ('url', wagtail.blocks.URLBlock(icon='link', required=False))], max_num=1, required=True))]))])), ('filmstrip_images', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock()), ('images', wagtail.blocks.StreamBlock([('image', apps.base.serializers.images.ApiImageChooserBlock())]))])), ('image_grid', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('grid_size', wagtail.blocks.ChoiceBlock(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('images', wagtail.blocks.StreamBlock([('image', apps.base.serializers.images.ApiImageChooserBlock())]))]))], null=True, use_json_field=True)),
                ('preview_thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='base.accessibleimage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
